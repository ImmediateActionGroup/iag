<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    	http://www.springframework.org/schema/aop    
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
 
    <!-- Spring MVC 扫描注解配置 -->
 	<context:component-scan base-package="com.iag.*">
 		<!--  <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>-->
 	</context:component-scan>
 	<aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- don't handle the static resource-->
    <mvc:default-servlet-handler />
 
    <!-- if you use annotation you must configure following setting -->
    <mvc:annotation-driven/>
    <!-- bak 
    <mvc:annotation-driven validator="validator"/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
         <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />  
    </bean>
    -->
    <!-- 静态资源 访问 beg
    <mvc:resources mapping="/static/**" location="/static/"></mvc:resources>-->
    <!-- 静态资源 访问 end-->
    <!-- 配置 文件上传的支持 -->
    <!-- upload file config -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1024000000"/>
    </bean>

    <!-- quartz 线程池配置 beg -->

    <!-- quartz 线程池配置 -->
    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="100"/>
        <property name="queueCapacity" value="500"/>
    </bean>
    <!-- quartz 业务对象  已经注解配置-->
    <!-- quartz 调度业务 -->
    <bean id="darkCheckJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="darkroomService"/>
        <property name="targetMethod" value="synoCheckDrStatus"/>
        <property name="concurrent" value="false"/>
    </bean>

    <!-- quartz 触发器 -->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="darkCheckJob"/>
        <property name="cronExpression" value="10 0/1 * * * ?"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
            </list>
        </property>
        <property name="taskExecutor" ref="executor"/>
    </bean>
    <!-- quartz 配置 end -->

    <!-- freemarker beg-->
    <!-- Freemarker配置 -->
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/view/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    <!-- freemarker end-->

    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!--视图解释器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="suffix" value=".ftl"/>
        <property name="cache" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
        <property name="requestContextAttribute" value="rc"/>
        <property name="order" value="0"/>
    </bean>
    <!-- configure the InternalResourceViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="1"/>
    </bean>
    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 开启openSessionInView -->
        <bean class="org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="sessionFactory" />
        </bean>
        <!-- 多个拦截器,顺序执行 --><!-- 如果不配置或/**,将拦截所有的Controller -->
        <!--
        <mvc:interceptor>

            <mvc:mapping path="/**" />
            <bean class="com.eagletest.interceptor.AuthorityInterceptor">
                <property name="uncheckUrls">
                    <list>
                        <value>/login</value>
                    </list>
                </property>
                <property name="createTaskStep">
                    <list>
                        <value>createtask</value>
                        <value>createtask_2</value>
                        <value>createtask_3</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
        -->
    </mvc:interceptors>
</beans>
